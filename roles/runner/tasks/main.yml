---
- name: Create a folder
  ansible.builtin.file:
    path:  "{{ run_dir }}"
    state: directory
    #TODO dep
    #Debian based OS (Debian, Ubuntu, Linux Mint)
    #
    #    liblttng-ust1 or liblttng-ust0
    #    libkrb5-3
    #    zlib1g
    #    libssl1.1, libssl1.0.2 or libssl1.0.0
    #    libicu63, libicu60, libicu57 or libicu55

- name: Define architecture mapping
  ansible.builtin.set_fact:
    arch_mapping:
      x86_64: "x64"
      aarch64: "arm64"
      arm64: "arm64"

- name: Def architecture
  ansible.builtin.set_fact:
    arch: "{{ arch_mapping[ansible_architecture]}}"
 
- name: Fetch GitHub releases page
  ansible.builtin.uri:
    url: "https://api.github.com/repos/actions/runner/releases/latest"
    return_content: yes
  register: github_releases

- name: Extract download URL for architecture
  ansible.builtin.set_fact:
    runner_download_url: >-
      {{
        (github_releases.json.assets | selectattr('browser_download_url', 'search', 'actions-runner-linux-' ~ arch))
        | map(attribute='browser_download_url') | list | first
      }}

#TODO fix 
- name: Download the latest runner package
  ansible.builtin.get_url:
    url: "{{ runner_download_url }}"
    dest: "{{run_dir}}/actions-runner-linux-{{ arch }}.tar.gz"
    # owner: "{{ ansible_remote_user }}"
    mode: "0774"
    #checksum: sha256:{{ checksum }}
 
- name: Extract the installer
  ansible.builtin.unarchive:
    src: "{{run_dir}}/actions-runner-linux-{{ arch }}.tar.gz"
    dest: "{{ run_dir }}"
    #owner: "{{ ansible_remote_user }}"
    remote_src: yes

#TODO add task to got register TOKEN
# https://docs.github.com/en/rest/actions/self-hosted-runners?apiVersion=2022-11-28#create-a-registration-token-for-an-organization
- name: Create the runner and start the configuration experience
  ansible.builtin.command: 
    "./config.sh \
     --url {{ url }} \
     --token {{ token }} \
     --name {{lookup('community.general.random_pet')}} \
     --unattended "
  args:
    chdir: "{{ run_dir }}"
  become: no

- name: install service
  ansible.builtin.command: 
    "./svc.sh install "
  args:
    chdir: "{{ run_dir }}"
  tags: service
  
- name: start service
  ansible.builtin.command: 
    "./svc.sh start "
  args:
    chdir: "{{ run_dir }}"
  tags: service2

